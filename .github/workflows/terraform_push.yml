name: Terraform Deploy

on:
  push:
    branches: 
      - develop
      - test
      - prelive
      - main
    paths:
      - '.github/workflows/iac_pull.yml'
      - 'terraform/**'

permissions:
  id-token: write
  contents: read

jobs:
  terraform-plan-apply:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest
    concurrency:
      group: "${{ github.repository}}-${{ github.ref_name }}"
    environment: ${{ (github.ref_name == 'main' && 'PRD') || (github.ref_name == 'develop' && 'DEV') }}
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.13

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: eu-west-1
      
      - name: Prepare Terraform Environment Config Files
        shell: bash
        run: ./scripts/tf-prepare-environment.sh ${{ (github.ref_name == 'main' && 'PRD') || (github.ref_name == 'develop' && 'DEV') }}

      - name: Initialise Terraform
        id: init
        run: terraform init -backend-config=backend.conf -input=false
        shell: bash
        working-directory: "./terraform"
        
      - name: Terraform Plan
        run: terraform plan -out "planfile" -var-file="config.tfvars" -no-color
        shell: bash
        working-directory: "./terraform"

      - name: Terraform Apply
        run: terraform apply -input=false "planfile"
        shell: bash
        working-directory: "./terraform"